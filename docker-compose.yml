name: rups-backend
networks:
  app-network:
    driver: bridge

services:
  mongo:
    image: mongo
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
      MONGO_USERNAME: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    restart: always
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo/init/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_MONGODB_URL: ${MONGO_URI}
      ME_CONFIG_BASICAUTH: false
    networks:
      - app-network
    depends_on:
      - mongo

  rest-api:
    build:
      context: .
      dockerfile: scripts/docker/node.Dockerfile
      args:
        GITHUB_PAT: ${GITHUB_PAT}
        NODE_ENV: ${ENV}
        APP_PORT: ${APP_PORT}
    restart: always
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - .:/app/rest-api
      - ./node_modules:/app/rest-api/node_modules
    environment:
      - NODE_ENV=${ENV}
    depends_on:
      - mongo
    networks:
      - app-network

  python-app:
    build:
      context: .
      dockerfile: scripts/docker/python.Dockerfile
    depends_on:
      - mongo
    networks:
      - app-network
volumes:
  mongo-data:
    driver: local


